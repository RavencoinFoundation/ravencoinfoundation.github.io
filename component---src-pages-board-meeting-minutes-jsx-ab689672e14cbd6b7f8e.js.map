{"version":3,"sources":["webpack:///./src/pages/board-meeting-minutes.jsx"],"names":["StyledBoardMeetingMinutes","styled","div","theme","screens","tablet","laptop","BoardMeetingMinutes","useState","minutesData","setMinutesData","isLoading","setIsLoading","useEffect","a","fetch","response","json","responseData","cleanedMinutesData","filter","file","getFileExtension","name","fetchData","map","key","sha","href","download_url"],"mappings":"sOAOMA,EAA4BC,IAAOC,IAAV,sGAAGD,CAAH,qEAERE,IAAMC,QAAQC,OAEdF,IAAMC,QAAQE,QAgDtBC,UA5Cf,WAAgC,IAAD,EACSC,mBAAS,IAAxCC,EADsB,KACTC,EADS,OAEKF,oBAAS,GAApCG,EAFsB,KAEXC,EAFW,KAsB7B,OAlBAC,qBAAU,WAAM,4CACd,gCAAAC,EAAA,sEACyBC,MACrB,+GAFJ,cACQC,EADR,gBAI6BA,EAASC,OAJtC,OAIQC,EAJR,OAKEN,GAAa,GAEPO,EAAqBD,EAAaE,QACtC,SAACC,GAAD,MAA0C,QAAhCC,YAAiBD,EAAKE,SAGlCb,EAAeS,GAXjB,4CADc,uBAAC,WAAD,wBAedK,KACC,IAGD,kBAAC,IAAD,KACE,kBAACxB,EAAD,KACE,kBAAC,IAAD,KACE,qDACCW,EACC,yCAEA,4BACGF,EAAYgB,KAAI,SAACJ,GAAD,OACf,wBAAIK,IAAKL,EAAKM,KACZ,uBAAGC,KAAMP,EAAKQ,cAAeR,EAAKE","file":"component---src-pages-board-meeting-minutes-jsx-ab689672e14cbd6b7f8e.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Container } from \"../components/common/Container\";\nimport Layout from \"../components/common/Layout\";\nimport getFileExtension from \"../utils/getFileExtension\";\nimport theme from \"../utils/theme\";\n\nconst StyledBoardMeetingMinutes = styled.div`\n  min-height: 50vh;\n  @media (min-width: ${theme.screens.tablet}) {\n  }\n  @media (min-width: ${theme.screens.laptop}) {\n  }\n`;\n\nfunction BoardMeetingMinutes() {\n  const [minutesData, setMinutesData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(\n        \"https://api.github.com/repos/RavencoinFoundation/ravencoinfoundation.github.io/contents/BoardMeetingMinutes\"\n      );\n      const responseData = await response.json();\n      setIsLoading(false);\n\n      const cleanedMinutesData = responseData.filter(\n        (file) => getFileExtension(file.name) === \"pdf\"\n      );\n\n      setMinutesData(cleanedMinutesData);\n    }\n\n    fetchData();\n  }, []);\n\n  return (\n    <Layout>\n      <StyledBoardMeetingMinutes>\n        <Container>\n          <h2>Board Meeting Minutes</h2>\n          {isLoading ? (\n            <p>Loading...</p>\n          ) : (\n            <ul>\n              {minutesData.map((file) => (\n                <li key={file.sha}>\n                  <a href={file.download_url}>{file.name}</a>\n                </li>\n              ))}\n            </ul>\n          )}\n        </Container>\n      </StyledBoardMeetingMinutes>\n    </Layout>\n  );\n}\n\nexport default BoardMeetingMinutes;\n"],"sourceRoot":""}